<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Olivia Snowden&#39;s Blog</title>
    <link>/</link>
    <description>Recent content on Olivia Snowden&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 17 Feb 2021 22:04:21 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DETECTING OBJECTS WITH CODE - Capstone Pt.2</title>
      <link>/capstone-pt2/</link>
      <pubDate>Wed, 17 Feb 2021 22:04:21 +0000</pubDate>
      
      <guid>/capstone-pt2/</guid>
      <description>In my first Capstone post I gave a rundown of basic AI terms and how to use Tensorflow to create your own machine learning (ML) script.
I&amp;rsquo;m using Tensorflow to write a script that can process images of roads and determine whether there is an obstacle in the road or not. Since I&amp;rsquo;m studying self-driving cars, I&amp;rsquo;d like to see if using biased data to train an object detection script affects the model&amp;rsquo;s performance.</description>
    </item>
    
    <item>
      <title>PYTHON METHODS &amp; CLASSES</title>
      <link>/python-methods/</link>
      <pubDate>Mon, 18 Jan 2021 20:23:20 +0000</pubDate>
      
      <guid>/python-methods/</guid>
      <description>Once you get past your first &amp;ldquo;Hello World&amp;rdquo; Python script, it&amp;rsquo;s good to learn how to use Python methods and classes. Methods and **functions **are a self-contained block of code that can be reused over and over. There are built-in functions that beginners in Python may already be familiar with, like print() and sum(). A user can also define a function (called a user-defined function) that executes a task they need done in their script multiple times.</description>
    </item>
    
    <item>
      <title>NEURAL NETWORKS &amp; TENSORFLOW - Capstone Pt.1</title>
      <link>/capstone-pt1/</link>
      <pubDate>Wed, 11 Nov 2020 21:48:27 +0000</pubDate>
      
      <guid>/capstone-pt1/</guid>
      <description>Over the next year, I will be completing a research project exploring how biased training data effects the machine learning algorithm of self-driving cars. This project, which I&amp;rsquo;ll detail in a later post, involves deep neural networks (DNNs), computer vision, linear algebra, and more. Is this project a massive undertaking? Yes. Will that stop me? Absolutely not. Let&amp;rsquo;s get started.
Neural Network Basics First, what is artificial intelligence (AI)? AI is a field of computer science pertaining to programming computers so that they demonstrate human-like intelligence.</description>
    </item>
    
    <item>
      <title>BASH BASICS</title>
      <link>/bash-basics/</link>
      <pubDate>Sat, 03 Oct 2020 17:50:51 +0000</pubDate>
      
      <guid>/bash-basics/</guid>
      <description>Bash, or the Bourne-Again SHell, is named after the creator of the Unix shell Stephen Bourn. Bash is a command language interpreter that can execute commands and process text files as input. Shell scripts are, basically, files containing a series of commands. You can schedule Bash scripts to run at certain times to automate tasks for you.
If you are using a Linux machine, you can write and execute Bash scripts in terminal.</description>
    </item>
    
    <item>
      <title>RASPI KUBERNETES CLUSTER WITH RANCHER</title>
      <link>/raspberry-pi-kubernetes/</link>
      <pubDate>Fri, 17 Jul 2020 00:02:29 +0000</pubDate>
      
      <guid>/raspberry-pi-kubernetes/</guid>
      <description>Kubernetes provides a framework to orchestrate multiple containers, verses working with one container at a time. To practice managing containers I opted to build a Kubernetes cluster on Raspberry Pis using Rancher. Rancher came about soon after Docker introduced containers to the market, and provides an open-source platform for enterprises to easily use Kubernetes in their environment.
K3S is a Rancher product that allows you to deploy a Kubernetes cluster using a single binary file thats less than 40MB.</description>
    </item>
    
    <item>
      <title>TERRAFORM IN vSPHERE</title>
      <link>/terraform-in-vsphere/</link>
      <pubDate>Wed, 08 Jul 2020 18:47:39 +0000</pubDate>
      
      <guid>/terraform-in-vsphere/</guid>
      <description>Introduction to Terraform Terraform by Hashicorp is a &amp;ldquo;tool for building, changing, and versioning infrastructure safely and efficiently&amp;rdquo;. Terraform works using infrastructure as code, meaning that build a blueprint of the resources you need in a configuration file (with the .tf extension) and Terraform builds that infrastructure for you. The Terraform package itself is a single binary file, easily downloaded, and is used to build/edit/destroy your resources.
In contrast to older versions of infrastructure build tools like Packer, Terraform allows you to create infrastructure across multiple cloud providers and is &amp;ldquo;smart&amp;rdquo; enough to know how many more machines to create in context of what you already have.</description>
    </item>
    
    <item>
      <title>vSPHERE INTRODUCTION</title>
      <link>/vmware-and-vsphere/</link>
      <pubDate>Wed, 01 Jul 2020 16:29:16 +0000</pubDate>
      
      <guid>/vmware-and-vsphere/</guid>
      <description>Practicing installing/updating/building machines is much more fun when you aren&amp;rsquo;t running the risk of ruining an entire computer. To give myself a safe environment to work in, I have been using VMware&amp;rsquo;s vSphere in our home lab for many of my computer projects. vSphere is a suite of virtualization products that allow you to create and manage VMs. This allows me to work on VMs that can run any OS I like, and if I something goes wrong I can just delete the VM and begin again.</description>
    </item>
    
    <item>
      <title>COGNITIVE SERVICES-TRANSLATING SPEECH</title>
      <link>/cognitive-services-translation/</link>
      <pubDate>Thu, 25 Jun 2020 16:41:36 +0000</pubDate>
      
      <guid>/cognitive-services-translation/</guid>
      <description>In addition to text analysis Microsoft&amp;rsquo;s cognitive services allow you to convert speech to text, text to speech, and even translate between spoken languages. This powerful AI service is surprisingly easy to use. I was able to speak into my computers microphone and receive a text translation in one language or a spoken translation in multiple languages &amp;ndash;all with the code provided on Microsoft Learn. You have the option to work with the speech SDK (software development kit) in C# or python, I choose python.</description>
    </item>
    
    <item>
      <title>COGNITIVE SERVICES-SENTIMENT IN TEXT</title>
      <link>/cognitive-services-text/</link>
      <pubDate>Wed, 24 Jun 2020 18:24:34 +0000</pubDate>
      
      <guid>/cognitive-services-text/</guid>
      <description>As I continue to study artificial intelligence I&amp;rsquo;ve been able to practice using Microsoft&amp;rsquo;s cognitive services. I was first introduced to cognitive services during the virtual Microsoft Build 2020 conference, and I&amp;rsquo;ve enjoyed getting to use them for myself. Since creating and training your own artificial intelligence/machine learning software is all kinds of complicated, cognitive services allow anyone to use AI in their projects without having to write much code. All you have to do is call the service that you want, and it will do the hard work for you.</description>
    </item>
    
    <item>
      <title>ARCH LINUX INSTALL</title>
      <link>/arch-linux-install/</link>
      <pubDate>Wed, 17 Jun 2020 19:24:25 +0000</pubDate>
      
      <guid>/arch-linux-install/</guid>
      <description>Arch Linux&amp;rsquo;s official website describes Arch as a distribution that &amp;ldquo;tries to Keep It Simple&amp;rdquo;. It also states that Arch is not for those without the ability or time for a &amp;ldquo;do-it-yourself&amp;rdquo; system&amp;ndash;which is true. I recently built a machine that needed a lightweight OS, so Arch Linux was a good choice. Installing Arch Linux can seem complicated, but understanding what needs to happen in each step of the install makes it feel fun and easy.</description>
    </item>
    
    <item>
      <title>HOME-LAB SETUP</title>
      <link>/home-lab-setup/</link>
      <pubDate>Fri, 12 Jun 2020 18:58:24 +0000</pubDate>
      
      <guid>/home-lab-setup/</guid>
      <description>For the home-lab, we used the following devices:
 Ubiquiti EdgeRouter X Ubiquiti UniFi 24 port switch 2 VMware ESXi Hosts A Synology NAS DS420j (Diskstation)  Building the home lab also required quite a few patch cables to connect devices, and I made most of them myself. This required UTP cable, plastic clips for the ends, a cable crimping tool, and a lot of patience. The arrangement of the wires, or the pinout, had to be in a specific order.</description>
    </item>
    
    <item>
      <title>BIRDCAM Pt. 3</title>
      <link>/birdcam-pt3/</link>
      <pubDate>Fri, 22 May 2020 08:00:00 +0000</pubDate>
      
      <guid>/birdcam-pt3/</guid>
      <description>The final step in building my bird cam was creating a way to view the bird photos on demand. To do this I utilized Docker on a third Raspberry Pi by installing Docker and Docker Compose.
sudo apt install docker sudo apt install docker-compose  Compose is a useful Docker tool that, among other things, allows you to run multi-container applications configured in a YAML file. On Docker Hub a useful photo gallery image linuxserver/photoshow has already been created, so I used that image to serve up the bird photos.</description>
    </item>
    
    <item>
      <title>BIRDCAM Pt. 2</title>
      <link>/birdcam-pt2/</link>
      <pubDate>Wed, 20 May 2020 08:00:00 +0000</pubDate>
      
      <guid>/birdcam-pt2/</guid>
      <description>After setting up the NFS server, but before making any NFS clients, I configured another Raspberry Pi to take the photos for my Bird Cam project. For this I used a Raspberry Pi Zero W and the appropriate camera attachment. Instead of using a keyboard/monitor to configure the Zero, I created a headless setup to allow the Zero to connect to wifi automatically when plugged in.
First, I put the Raspbian Lite OS on a mini SD card.</description>
    </item>
    
    <item>
      <title>BIRDCAM Pt. 1</title>
      <link>/birdcam-pt1/</link>
      <pubDate>Mon, 18 May 2020 17:38:06 +0000</pubDate>
      
      <guid>/birdcam-pt1/</guid>
      <description>In this project I wanted to set up a camera to take pictures of pretty birds at a feeder, and then view those photos online. To do so I used three Raspberry Pis, NFS, and Docker.
One Raspberry pi served as the NFS server, while the other two were NFS clients. One of the clients was a Raspberry Pi zero w outfitted with a camera to take the pictures and store them on the NFS server.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/page/about/</link>
      <pubDate>Fri, 03 Apr 2015 02:13:50 +0000</pubDate>
      
      <guid>/page/about/</guid>
      <description>About Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean nec dolor in magna lobortis egestas. Suspendisse eu erat tempor, tristique neque eu, convallis nulla. Curabitur vel bibendum lacus, at semper mauris. Suspendisse aliquet commodo ex, sed sagittis metus aliquam id. Maecenas feugiat rutrum lorem vel imperdiet. Nullam ornare lectus ut enim finibus, et porttitor mi tincidunt. Aenean lacinia, leo quis vehicula eleifend, quam libero sagittis erat, at euismod augue mauris et sapien.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>/page/contact/</link>
      <pubDate>Fri, 03 Apr 2015 02:13:50 +0000</pubDate>
      
      <guid>/page/contact/</guid>
      <description>Contact Aenean ipsum justo, semper eu nisl ut, pretium tincidunt sem. Praesent et diam sit amet lacus lobortis dictum a id lacus. Quisque hendrerit sit amet turpis eu varius. Ut id lorem ac felis ultrices tincidunt. Pellentesque consequat arcu ac fringilla imperdiet. Phasellus pellentesque, sapien non pulvinar blandit, sapien ante aliquet felis, vel porttitor sapien ante in lacus. Fusce non urna aliquet, malesuada nibh vel, luctus urna. Phasellus ut lacus molestie, varius purus quis, malesuada lorem.</description>
    </item>
    
  </channel>
</rss>
